================================================================================
Zdadania 3: Katowanie funkcji 
================================================================================
By uruchmomić funkcję należy ją najpierw załadować np. source ./C3-1.sh 
Po tym jest dostępna w naszej sesji bahs-a i możemy ją wywoływać.
Funkcje wywołujemy po imieniu i przekazujemy do niej argumenty jeśli trzeba.

================================================================================
Skrypt: C3-1

Skomponuj funkcję, która jako argumenty przyjmnie kolor ($kolor, lub kod koloru)
i tekst do wyświetlenia. 

--------------------------------------------------------------------------------
Składnia funcji:

function nazwa_funkcji {
#kod do wykonania
}

lub

function nazwa_funkcji { #kod do wykonania; }

UWAGA na średnik po końcu podawania poleceń.

lub

nazwa_funkcji() {
#kod do wykonania
}

--------------------------------------------------------------------------------
Funcja przyjmuje kolor i tekst w postaci argumentów tak samo jak w przypadku
skryptów. $1 = pierwszy argument, $2 = drugi argument.

--------------------------------------------------------------------------------
================================================================================
Skrypt: C3-2 

Skrypt napisany/zgapiony w bólach.
Po x czasu myślenia jak napisać rekurencyjnie ciąg Fibonacciego postanowiłem 
zajrzeć do stacoverflow po jakieś mądrości. Polecenie zadania nie mówi: 
"napisz funkcję" tylko "przygotuj funkcję" ( ￣ω￣) .

Nie zmienia to faktu że przerobienie jej by zwracała mi wartość za pomocą
return nie było takie proste. To co się dało pozamykałem do lokalnych zmiennych
dzięki czemu bardzo nieczytelny wzór na liczenie ciągu Fibonacciego stał się
trochę mniej nieczytelny i byłem w stanie wyciągnąć z niego wartość, którą
return mógłby zwrócić.

Koniec końców mam skrypt, który wyświetla wartość konkretnego elementu ciągu
Fibonacciego za pomocą echo i return dzięki czemu można bez problemu
wywnioskować odpowiedź na pytanie:
"Czy są jakieś ograniczenia". Tak są... I dają się we znaki.

return zwraca wartość z funkcji w skrypcie, NIE wychodzi z programu jak w
C++. Dodatkowo może zwracać TYLKO liczby z zakresu 0-255. Jak wartość liczby,
którą funkcja próbuje zwrócić, przekroczy 255 to return zaczyna jechać od 0.
Czyli jak echo wyświetli 377 to return pokaże 121 (377-256 = 121).

