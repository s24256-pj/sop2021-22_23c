================================================================================
Zdadania 3: Katowanie funkcji 
================================================================================
By uruchmomić funkcję należy ją najpierw załadować np. source ./C3-1.sh 
Po tym jest dostępna w naszej sesji bahs-a i możemy ją wywoływać.
Funkcje wywołujemy po imieniu i przekazujemy do niej argumenty jeśli trzeba.

================================================================================
Skrypt: C3-1

Skomponuj funkcję, która jako argumenty przyjmnie kolor ($kolor, lub kod koloru)
i tekst do wyświetlenia. 

--------------------------------------------------------------------------------
Składnia funcji:

function nazwa_funkcji {
#kod do wykonania
}

lub

function nazwa_funkcji { #kod do wykonania; }

UWAGA na średnik po końcu podawania poleceń.

lub

nazwa_funkcji() {
#kod do wykonania
}

--------------------------------------------------------------------------------
Funcja przyjmuje kolor i tekst w postaci argumentów tak samo jak w przypadku
skryptów. $1 = pierwszy argument, $2 = drugi argument.

--------------------------------------------------------------------------------
================================================================================
Skrypt: C3-2 

Skrypt łopatologicznie przeanalizowany z góry na dół n ilości razy by końcu
wpaść na ten swietny pomysł i najzwyczajniej w świecie wywołać funkcję po nazwie
znajdując się w tej funkcji. Potem można zebrać return z tej funkcji w zmienną.

Taka przekombinowana rekurencja. Trochę czasu zajeło by w końcu sprawdzić co
się stanie jak w funkcji wywołam samą siebie i co będzie się znajdowało w $? .

Oczywiście przed tym musiałem łopatologicznie popodawać co funkcja ma zwracać
bym wiedział co mam otrzymać i móc cokolwiek z tego wywnioskować.
Zostawiłem część mojego modus operandi by było widać gdzie nastąpił przełom.
(￣ω￣)

"Czy są jakieś ograniczenia".
return zwraca wartość z funkcji w skrypcie, NIE wychodzi z programu jak w
C++. Dodatkowo może zwracać TYLKO liczby z zakresu 0-255. Jak wartość liczby,
którą funkcja próbuje zwrócić, przekroczy 255 to return zaczyna jechać od 0.
Czyli jak echo wyświetli 377 to return pokaże 121 (377-256 = 121).

================================================================================



